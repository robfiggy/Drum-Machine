JavaScript / HTML / CSS

Process
- The keys ASDFGHJKL are associated with the JS event keycode. When the keys are pressed, a corresponding audio file is activated. 
-  The event handler for keydown activates the audio and begins playing it. The <div> element is also activated, causing the CSS to change.
- Used div.classList.add( 'playing' ); to add a class to any key being pressed. Afterward, I used div.classList.remove to deactivate the CSS animation after a certain amount of time.
- The event listener searches for audio and div elements, adds a class to a div, and plays a sound when a key is pressed. 
- The audio is set to timeout so that a key can be pressed multiple times. The audio is effetively reset if the same key is pressed again. The following code sets that up:
if ( audio ) {
        const timerId = `timer-${key}`;

        if ( timers[ timerId ] && timers[ timerId ].clearTimeout ) {
            timers[ timerId ].clearTimeout();
        } 

Some notes...
- window.addEventListener is used to call something when pressing a key 
	- Each key is assigned a keycode
	- document.querySelector is used to call on a specific sound. Any audio that you'd like 	to access is stored within  `audio[data-key="${key}"]`
- This drum machine was a part of the JavaScript 30 lessons by Wes Bos, which provides the CSS and sound files. I also used Thorsten Frommen's write up to help me understand and implement the code to make the program run.
